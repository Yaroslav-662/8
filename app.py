import pymongo
from datetime import datetime
from dotenv import load_dotenv
import os
import json
from colorama import Fore, Style

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó –∑ .env
load_dotenv()
MONGO_URI = os.getenv("MONGO_URI", "mongodb://localhost:27017/")

# –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ MongoDB
try:
    client = pymongo.MongoClient(MONGO_URI)
    db = client["recipe_db"]  # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
    collection = db["recipes"]  # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ–ª–µ–∫—Ü—ñ—ó
    collection.create_index("name")  # –Ü–Ω–¥–µ–∫—Å–∞—Ü—ñ—è –¥–ª—è –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—ó –ø–æ—à—É–∫—É
except pymongo.errors.ConnectionError as e:
    print(Fore.RED + "‚ùå –ü–æ–º–∏–ª–∫–∞ –∑'—î–¥–Ω–∞–Ω–Ω—è –∑ MongoDB:" + Style.RESET_ALL, e)
    exit()

# CRUD-–æ–ø–µ—Ä–∞—Ü—ñ—ó
def add_recipe():
    """–î–æ–¥–∞—î –Ω–æ–≤–∏–π —Ä–µ—Ü–µ–ø—Ç —É –±–∞–∑—É –¥–∞–Ω–∏—Ö."""
    try:
        name = input("–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É —Ä–µ—Ü–µ–ø—Ç–∞: ")
        category = input("–ö–∞—Ç–µ–≥–æ—Ä—ñ—è —Å—Ç—Ä–∞–≤–∏ (—Å—É–ø, –¥–µ—Å–µ—Ä—Ç —Ç–æ—â–æ): ")
        time = input("–ß–∞—Å –ø—Ä–∏–≥–æ—Ç—É–≤–∞–Ω–Ω—è (—Ö–≤–∏–ª–∏–Ω–∏): ")
        if not time.isdigit() or int(time) <= 0:
            print(Fore.RED + "‚ùå –í–≤–µ–¥—ñ—Ç—å –∫–æ—Ä–µ–∫—Ç–Ω–∏–π —á–∞—Å –ø—Ä–∏–≥–æ—Ç—É–≤–∞–Ω–Ω—è!" + Style.RESET_ALL)
            return
        time = int(time)
        ingredients = input("–°–ø–∏—Å–æ–∫ —ñ–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç—ñ–≤ (—á–µ—Ä–µ–∑ –∫–æ–º—É): ").split(", ")
        instructions = input("–û–ø–∏—à—ñ—Ç—å –ø—Ä–æ—Ü–µ—Å –ø—Ä–∏–≥–æ—Ç—É–≤–∞–Ω–Ω—è: ")

        recipe = {
            "name": name,
            "category": category,
            "time": time,
            "ingredients": ingredients,
            "instructions": instructions,
            "created_at": datetime.now()
        }
        collection.insert_one(recipe)
        print(Fore.GREEN + "‚úÖ –†–µ—Ü–µ–ø—Ç —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–æ!" + Style.RESET_ALL)
    except Exception as e:
        print(Fore.RED + "‚ùå –ü–æ–º–∏–ª–∫–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Ä–µ—Ü–µ–ø—Ç–∞:" + Style.RESET_ALL, e)

def view_recipes():
    """–ü–µ—Ä–µ–≥–ª—è–¥ —É—Å—ñ—Ö —Ä–µ—Ü–µ–ø—Ç—ñ–≤."""
    try:
        recipes = collection.find()
        for recipe in recipes:
            print(f"–ù–∞–∑–≤–∞: {recipe['name']}, –ö–∞—Ç–µ–≥–æ—Ä—ñ—è: {recipe['category']}, –ß–∞—Å: {recipe['time']} —Ö–≤.")
            print(f"–Ü–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç–∏: {', '.join(recipe['ingredients'])}")
            print(f"–Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è: {recipe['instructions']}")
            print("-" * 30)
    except Exception as e:
        print(Fore.RED + "‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ä–µ—Ü–µ–ø—Ç—ñ–≤:" + Style.RESET_ALL, e)

def search_recipes():
    """–ü–æ—à—É–∫ —Ä–µ—Ü–µ–ø—Ç–∞ –∑–∞ –Ω–∞–∑–≤–æ—é."""
    try:
        name = input("–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É —Ä–µ—Ü–µ–ø—Ç–∞ –¥–ª—è –ø–æ—à—É–∫—É: ")
        recipe = collection.find_one({"name": {"$regex": name, "$options": "i"}})
        if recipe:
            print(f"–ù–∞–∑–≤–∞: {recipe['name']}, –ö–∞—Ç–µ–≥–æ—Ä—ñ—è: {recipe['category']}, –ß–∞—Å: {recipe['time']} —Ö–≤.")
            print(f"–Ü–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç–∏: {', '.join(recipe['ingredients'])}")
            print(f"–Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è: {recipe['instructions']}")
        else:
            print(Fore.YELLOW + "‚ùå –†–µ—Ü–µ–ø—Ç –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!" + Style.RESET_ALL)
    except Exception as e:
        print(Fore.RED + "‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–æ—à—É–∫—É —Ä–µ—Ü–µ–ø—Ç–∞:" + Style.RESET_ALL, e)

def update_recipe():
    """–û–Ω–æ–≤–ª–µ–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ —Ä–µ—Ü–µ–ø—Ç."""
    try:
        name = input("–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É —Ä–µ—Ü–µ–ø—Ç–∞, —è–∫–∏–π –ø–æ—Ç—Ä—ñ–±–Ω–æ –æ–Ω–æ–≤–∏—Ç–∏: ")
        recipe = collection.find_one({"name": {"$regex": name, "$options": "i"}})
        if recipe:
            print(f"–ó–Ω–∞–π–¥–µ–Ω–æ —Ä–µ—Ü–µ–ø—Ç: {recipe['name']}")
            new_time = input("–ù–æ–≤–∏–π —á–∞—Å –ø—Ä–∏–≥–æ—Ç—É–≤–∞–Ω–Ω—è (—Ö–≤–∏–ª–∏–Ω–∏): ")
            if not new_time.isdigit() or int(new_time) <= 0:
                print(Fore.RED + "‚ùå –í–≤–µ–¥—ñ—Ç—å –∫–æ—Ä–µ–∫—Ç–Ω–∏–π —á–∞—Å –ø—Ä–∏–≥–æ—Ç—É–≤–∞–Ω–Ω—è!" + Style.RESET_ALL)
                return
            new_time = int(new_time)
            collection.update_one({"_id": recipe["_id"]}, {"$set": {"time": new_time}})
            print(Fore.GREEN + "‚úÖ –†–µ—Ü–µ–ø—Ç –æ–Ω–æ–≤–ª–µ–Ω–æ!" + Style.RESET_ALL)
        else:
            print(Fore.YELLOW + "‚ùå –†–µ—Ü–µ–ø—Ç –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!" + Style.RESET_ALL)
    except Exception as e:
        print(Fore.RED + "‚ùå –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ä–µ—Ü–µ–ø—Ç–∞:" + Style.RESET_ALL, e)

def delete_recipe():
    """–í–∏–¥–∞–ª–µ–Ω–Ω—è —Ä–µ—Ü–µ–ø—Ç–∞."""
    try:
        name = input("–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É —Ä–µ—Ü–µ–ø—Ç–∞, —è–∫–∏–π –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–∏–¥–∞–ª–∏—Ç–∏: ")
        result = collection.delete_one({"name": {"$regex": name, "$options": "i"}})
        if result.deleted_count > 0:
            print(Fore.GREEN + "‚úÖ –†–µ—Ü–µ–ø—Ç –≤–∏–¥–∞–ª–µ–Ω–æ!" + Style.RESET_ALL)
        else:
            print(Fore.YELLOW + "‚ùå –†–µ—Ü–µ–ø—Ç –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!" + Style.RESET_ALL)
    except Exception as e:
        print(Fore.RED + "‚ùå –ü–æ–º–∏–ª–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è —Ä–µ—Ü–µ–ø—Ç–∞:" + Style.RESET_ALL, e)

def export_recipes():
    """–ï–∫—Å–ø–æ—Ä—Ç—É—î –≤—Å—ñ —Ä–µ—Ü–µ–ø—Ç–∏ —É JSON-—Ñ–∞–π–ª."""
    try:
        recipes = list(collection.find())
        for recipe in recipes:
            recipe["_id"] = str(recipe["_id"])  # –ö–æ–Ω–≤–µ—Ä—Ç—É—î–º–æ ObjectId —É —Å—Ç—Ä–æ–∫—É
            if "created_at" in recipe:
                recipe["created_at"] = recipe["created_at"].strftime("%Y-%m-%d %H:%M:%S")  # –ö–æ–Ω–≤–µ—Ä—Ç—É—î–º–æ datetime —É —Å—Ç—Ä–æ–∫—É
        with open("recipes_backup.json", "w", encoding="utf-8") as file:
            json.dump(recipes, file, ensure_ascii=False, indent=4)
        print(Fore.GREEN + "‚úÖ –†–µ—Ü–µ–ø—Ç–∏ —É—Å–ø—ñ—à–Ω–æ –µ–∫—Å–ø–æ—Ä—Ç–æ–≤–∞–Ω–æ —É recipes_backup.json!" + Style.RESET_ALL)
    except Exception as e:
        print(Fore.RED + "‚ùå –ü–æ–º–∏–ª–∫–∞ –µ–∫—Å–ø–æ—Ä—Ç—É —Ä–µ—Ü–µ–ø—Ç—ñ–≤:" + Style.RESET_ALL, e)

# –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
def main_menu():
    while True:
        print("\n" + Fore.CYAN + "=== –ú–µ–Ω—é ===" + Style.RESET_ALL)
        print("1. –î–æ–¥–∞—Ç–∏ —Ä–µ—Ü–µ–ø—Ç")
        print("2. –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –≤—Å—ñ —Ä–µ—Ü–µ–ø—Ç–∏")
        print("3. –ó–Ω–∞–π—Ç–∏ —Ä–µ—Ü–µ–ø—Ç")
        print("4. –û–Ω–æ–≤–∏—Ç–∏ —Ä–µ—Ü–µ–ø—Ç")
        print("5. –í–∏–¥–∞–ª–∏—Ç–∏ —Ä–µ—Ü–µ–ø—Ç")
        print("6. –ï–∫—Å–ø–æ—Ä—Ç—É–≤–∞—Ç–∏ —Ä–µ—Ü–µ–ø—Ç–∏ —É JSON")
        print("7. –í–∏–π—Ç–∏")
        
        choice = input("–û–±–µ—Ä—ñ—Ç—å –¥—ñ—é: ")
        if choice == "1":
            add_recipe()
        elif choice == "2":
            view_recipes()
        elif choice == "3":
            search_recipes()
        elif choice == "4":
            update_recipe()
        elif choice == "5":
            delete_recipe()
        elif choice == "6":
            export_recipes()
        elif choice == "7":
            print(Fore.CYAN + "üëã –î–æ –ø–æ–±–∞—á–µ–Ω–Ω—è!" + Style.RESET_ALL)
            break
        else:
            print(Fore.RED + "‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä, —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑." + Style.RESET_ALL)

# –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≥—Ä–∞–º–∏
if __name__ == "__main__":
    main_menu()
